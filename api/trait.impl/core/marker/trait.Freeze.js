(function() {
    var implementors = Object.fromEntries([["MathPotato",[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"MathPotato/types/ast_node_types_enum/enum.AstNodeType.html\" title=\"enum MathPotato::types::ast_node_types_enum::AstNodeType\">AstNodeType</a>",1,["MathPotato::types::ast_node_types_enum::AstNodeType"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"MathPotato/types/infix_operation_enum/enum.InfixOperationType.html\" title=\"enum MathPotato::types::infix_operation_enum::InfixOperationType\">InfixOperationType</a>",1,["MathPotato::types::infix_operation_enum::InfixOperationType"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"MathPotato/types/potato_ast_node/enum.PotatoAstNode.html\" title=\"enum MathPotato::types::potato_ast_node::PotatoAstNode\">PotatoAstNode</a>",1,["MathPotato::types::potato_ast_node::PotatoAstNode"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"MathPotato/types/potato_ast_node/enum.PotatoAstNodeKind.html\" title=\"enum MathPotato::types::potato_ast_node::PotatoAstNodeKind\">PotatoAstNodeKind</a>",1,["MathPotato::types::potato_ast_node::PotatoAstNodeKind"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"MathPotato/types/potato_token_types/enum.PotatoTokenTypes.html\" title=\"enum MathPotato::types::potato_token_types::PotatoTokenTypes\">PotatoTokenTypes</a>",1,["MathPotato::types::potato_token_types::PotatoTokenTypes"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"MathPotato/types/variable_state_enum/enum.VariableState.html\" title=\"enum MathPotato::types::variable_state_enum::VariableState\">VariableState</a>",1,["MathPotato::types::variable_state_enum::VariableState"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"MathPotato/parser/parser_error/struct.ParseError.html\" title=\"struct MathPotato::parser::parser_error::ParseError\">ParseError</a>",1,["MathPotato::parser::parser_error::ParseError"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"MathPotato/types/ast_tree/struct.MathPotatoAstTree.html\" title=\"struct MathPotato::types::ast_tree::MathPotatoAstTree\">MathPotatoAstTree</a>",1,["MathPotato::types::ast_tree::MathPotatoAstTree"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"MathPotato/types/i32_ast_node/struct.I32AstNode.html\" title=\"struct MathPotato::types::i32_ast_node::I32AstNode\">I32AstNode</a>",1,["MathPotato::types::i32_ast_node::I32AstNode"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"MathPotato/types/i32_ast_tree/struct.I32AstTree.html\" title=\"struct MathPotato::types::i32_ast_tree::I32AstTree\">I32AstTree</a>",1,["MathPotato::types::i32_ast_tree::I32AstTree"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"MathPotato/types/infix_operation_ast_node/struct.InfixOperationAstNode.html\" title=\"struct MathPotato::types::infix_operation_ast_node::InfixOperationAstNode\">InfixOperationAstNode</a>",1,["MathPotato::types::infix_operation_ast_node::InfixOperationAstNode"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"MathPotato/types/infix_operation_ast_tree/struct.InfixOperationAstTree.html\" title=\"struct MathPotato::types::infix_operation_ast_tree::InfixOperationAstTree\">InfixOperationAstTree</a>",1,["MathPotato::types::infix_operation_ast_tree::InfixOperationAstTree"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"MathPotato/types/integer_statement_ast_node/struct.IntegerStatementAstNode.html\" title=\"struct MathPotato::types::integer_statement_ast_node::IntegerStatementAstNode\">IntegerStatementAstNode</a>",1,["MathPotato::types::integer_statement_ast_node::IntegerStatementAstNode"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"MathPotato/types/integer_value_expression_ast_node/struct.IntegerValueExpressionAstNode.html\" title=\"struct MathPotato::types::integer_value_expression_ast_node::IntegerValueExpressionAstNode\">IntegerValueExpressionAstNode</a>",1,["MathPotato::types::integer_value_expression_ast_node::IntegerValueExpressionAstNode"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"MathPotato/types/potato_token/struct.PotatoToken.html\" title=\"struct MathPotato::types::potato_token::PotatoToken\">PotatoToken</a>",1,["MathPotato::types::potato_token::PotatoToken"]]]]]);
    if (window.register_implementors) {
        window.register_implementors(implementors);
    } else {
        window.pending_implementors = implementors;
    }
})()
//{"start":57,"fragment_lengths":[6010]}